server:
  port: 9090
  servlet:
    context-path: /api
spring:
  datasource:
#    url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&characterEncoding=UTF-8
#    username: root
#    password: admin
#    driver-class-name: com.mysql.jdbc.Driver
    #动态数据源
    dynamic:
      master:
        jdbc-url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: admin
        driver-class-name: com.mysql.jdbc.Driver
        pool-name: Master-DB
      slave1:
        jdbc-url: jdbc:mysql://127.0.0.1:3306/ssa?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: admin
        driver-class-name: com.mysql.jdbc.Driver
        pool-name: Slave1-DB
  redis:
    host: 127.0.0.1
    port: 6379
    password: redis123
  quartz:
    job-store-type: memory
    properties:
      org:
        quartz:
          jobStore:
            class: org.quartz.simpl.RAMJobStore
  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: 192.168.74.131:9200
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  mail:
    host: mail.test.com
#    username: test1
#    password: test1
    port: 25
logging:
  level:
    com.jamie.framework: debug
  path: D:\logs
# mybatis-plus
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-handlers-package: com.jamie.framework.mybatis.handler
  global-config:
    banner: false
  type-aliases-package: com.jamie.framework.mybatis.handler
# 系统配置
app:
  key: APP1
  login-salt-timeout-seconds: 60
  exclude-urls: /instances,/actuator/**,/search/**,/test/**,/file/**
  quartz: # cronMap 和 details 同时配置 cronMap 优先
    cronMap:
      com_jamie_framework_quartz_job_OpLogWriteQuartzJob: 0/30 * * * * ? *
    details:
      com_jamie_framework_quartz_job_OpLogWriteQuartzJob: # QuartzCronProperties 注入时候 "." 分割无法注入(null)，所以使用"_" 下划线隔开包名
        interval: 1
        repeatCount: 3
shiro:
  jwt:
    tokenName: X-TOKEN
    secret: 123456
    issuer: lz
    subject: test
    expire-second: 3600
    refresh-token-interval: 30 #值越小，刷新率越高；当前时间 + (超时时间 - 刷新时间) > 过期时间(未来某个时间点) 则刷新token
    single-login: true
zookeeper:
  connect-addr: 192.168.74.128:2181
  namespace: super
